<!DOCTYPE html>
<html lang="pt-br">
<head>
<meta charset="UTF-8">
<title>Detector de Bombas - Mines</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<style>
  body {
    font-family: 'Segoe UI', sans-serif;
    background-color: #121212;
    color: #eee;
    text-align: center;
    margin: 0;
    padding: 20px;
  }
  h1 {
    color: #00ff99;
    margin-bottom: 10px;
  }
  .container {
    max-width: 600px;
    margin: auto;
    background: #1e1e1e;
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0 0 20px rgba(0,0,0,0.7);
  }
  label, input {
    font-size: 18px;
  }
  input[type=number] {
    width: 60px;
    padding: 5px;
    margin-left: 10px;
    border-radius: 5px;
    border: none;
  }
  .buttons {
    margin: 15px 0;
  }
  button {
    background-color: #00ff99;
    border: none;
    color: #000;
    padding: 10px 20px;
    margin: 5px;
    border-radius: 10px;
    cursor: pointer;
    font-weight: bold;
    transition: background 0.3s;
  }
  button:hover {
    background-color: #00cc77;
  }
  .grid {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    gap: 5px;
    margin-top: 20px;
  }
  .cell {
    background-color: #333;
    width: 100%;
    aspect-ratio: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s, transform 0.2s;
    font-weight: bold;
    user-select: none;
  }
  .cell:hover {
    transform: scale(1.05);
  }
  .cell.open { background-color: #00ff99; color: #000; }
  .cell.safe { background-color: #00ff99; color: #000; }
  .cell.risk { background-color: yellow; color: #000; }
  .cell.bomb { background-color: red; color: #fff; }
</style>
</head>
<body>

<div class="container">
  <h1>Detector de Bombas - Mines</h1>
  
  <label for="bombs">Nº de Bombas (3 a 10):</label>
  <input type="number" id="bombs" min="3" max="10" value="3">

  <div class="buttons">
    <button onclick="resetGrid()">Resetar Grade</button>
    <button onclick="calcular()">Calcular Probabilidades</button>
  </div>

  <div class="grid" id="grid"></div>
</div>

<script>
const gridSize = 8;
let opened = [];

function createGrid() {
  const grid = document.getElementById('grid');
  grid.innerHTML = '';
  opened = [];
  for (let i = 0; i < gridSize * gridSize; i++) {
    const cell = document.createElement('div');
    cell.className = 'cell';
    cell.dataset.index = i;
    cell.addEventListener('click', () => toggleCell(cell));
    grid.appendChild(cell);
  }
}

function toggleCell(cell) {
  const idx = parseInt(cell.dataset.index);
  if (opened.includes(idx)) {
    opened = opened.filter(i => i !== idx);
    cell.classList.remove('open');
    cell.innerText = '';
  } else {
    opened.push(idx);
    cell.classList.add('open');
    cell.innerText = '✔';
  }
}

function resetGrid() {
  createGrid();
}

function calcular() {
  const bombs = parseInt(document.getElementById('bombs').value);
  const totalCells = gridSize * gridSize;
  const restantes = totalCells - opened.length;

  if (restantes <= 0) {
    alert('Todas as casas estão abertas!');
    return;
  }

  const prob = bombs / restantes;

  document.querySelectorAll('.cell').forEach(cell => {
    const idx = parseInt(cell.dataset.index);
    if (opened.includes(idx)) return;
    cell.classList.remove('safe', 'risk', 'bomb');
    if (prob <= 0.15) {
      cell.classList.add('safe');
      cell.innerText = (prob * 100).toFixed(1) + '%';
    } else if (prob <= 0.35) {
      cell.classList.add('risk');
      cell.innerText = (prob * 100).toFixed(1) + '%';
    } else {
      cell.classList.add('bomb');
      cell.innerText = (prob * 100).toFixed(1) + '%';
    }
  });
}

createGrid();
</script>

</body>
</html>
